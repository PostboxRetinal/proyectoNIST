name: Coverage Report

on:
  workflow_run:
    workflows: ['Unit Tests']
    types:
      - completed
  workflow_dispatch: # Permite ejecutar el workflow manualmente

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  publish-coverage:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Download company-service coverage
        uses: dawidd6/action-download-artifact@v3
        with:
          workflow: unit-tests.yml
          workflow_conclusion: success
          name: company-service-coverage
          path: ./coverage/company-service
        continue-on-error: true

      - name: Download forms-service coverage
        uses: dawidd6/action-download-artifact@v3
        with:
          workflow: unit-tests.yml
          workflow_conclusion: success
          name: forms-service-coverage
          path: ./coverage/forms-service
        continue-on-error: true

      - name: Download user-service coverage
        uses: dawidd6/action-download-artifact@v3
        with:
          workflow: unit-tests.yml
          workflow_conclusion: success
          name: user-service-coverage
          path: ./coverage/user-service
        continue-on-error: true

      - name: Check downloaded artifacts
        run: |
          echo "Checking what was downloaded:"
          find ./coverage -type f | head -20 || echo "No coverage files found"

      - name: Generate combined coverage report
        run: |
          mkdir -p ./coverage-report

          # Copy coverage reports to the final directory
          services_found=0
          
          if [ -d "./coverage/company-service" ]; then
            cp -r ./coverage/company-service ./coverage-report/company-service
            services_found=$((services_found + 1))
          fi
          
          if [ -d "./coverage/forms-service" ]; then
            cp -r ./coverage/forms-service ./coverage-report/forms-service  
            services_found=$((services_found + 1))
          fi
          
          if [ -d "./coverage/user-service" ]; then
            cp -r ./coverage/user-service ./coverage-report/user-service
            services_found=$((services_found + 1))
          fi

          # Create a combined HTML index
          echo "<html><head><title>Coverage Report - NIST Project</title></head>" > ./coverage-report/index.html
          echo "<body><h1>Test Coverage Summary</h1>" >> ./coverage-report/index.html
          
          if [ $services_found -eq 0 ]; then
            echo "<p>No coverage reports found. This may be due to:</p>" >> ./coverage-report/index.html
            echo "<ul>" >> ./coverage-report/index.html
            echo "<li>Tests are still running</li>" >> ./coverage-report/index.html
            echo "<li>Coverage generation failed</li>" >> ./coverage-report/index.html
            echo "<li>Artifacts were not uploaded properly</li>" >> ./coverage-report/index.html
            echo "</ul>" >> ./coverage-report/index.html
            echo "<p>Check the <a href='https://github.com/PostboxRetinal/proyectoNIST/actions'>Actions tab</a> for details.</p>" >> ./coverage-report/index.html
          else
            echo "<p>Found coverage reports for $services_found service(s):</p>" >> ./coverage-report/index.html
            echo "<ul>" >> ./coverage-report/index.html

            # List each service with its coverage report
            for dir in ./coverage-report/*/; do
              if [ -d "$dir" ] && [ -f "$dir/index.html" ]; then
                service=$(basename "$dir")
                echo "<li><a href='./$service/index.html'>$service Coverage Report</a></li>" >> ./coverage-report/index.html
              fi
            done

            echo "</ul>" >> ./coverage-report/index.html
          fi
          
          echo "</body></html>" >> ./coverage-report/index.html
          
          # Show what we have
          echo "Coverage report structure:"
          find ./coverage-report -type f -name "*.html" | head -10 || echo "No HTML files found"

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./coverage-report

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
